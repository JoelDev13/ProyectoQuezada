/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.util.List;
import model.MetodoDePagoModel;
import model.dao.MetodoDePagoDao;
import javax.swing.DefaultListModel;
 
/**
 *
 * @author 
 */
public class MetodoDePago extends javax.swing.JPanel {

    /**
     * Creates new form MetodoDePago
     */
    public MetodoDePago() {
        initComponents();
        cargarLista();
        // Hace que el campo ID sea de solo lectura
        jTextFieldId.setEditable(false);
        
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelId = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabelServicio = new javax.swing.JLabel();
        jTextFieldServicio = new javax.swing.JTextField();
        jPanelFondo = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        roundedGreenButtomGuardar = new view.RoundedGreenButtom();
        roundedGreenButtom2 = new view.RoundedGreenButtom();

        jLabelId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelId.setText("ID");

        jLabelServicio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelServicio.setText("Metodo de pago");

        jPanelFondo.setBackground(new java.awt.Color(0, 153, 0));

        jLabelTitulo.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabelTitulo.setText("Metodo De Pago");

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        roundedGreenButtomGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/component/pacientes/icons/icons8-save-30.png"))); // NOI18N
        roundedGreenButtomGuardar.setText("Guardar");
        roundedGreenButtomGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundedGreenButtomGuardarActionPerformed(evt);
            }
        });

        roundedGreenButtom2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/component/pacientes/icons/icons8-delete-30 (1).png"))); // NOI18N
        roundedGreenButtom2.setText("Eliminar");
        roundedGreenButtom2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundedGreenButtom2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(roundedGreenButtomGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(roundedGreenButtom2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(jLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelServicio)
                            .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabelId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roundedGreenButtomGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roundedGreenButtom2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 109, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        if (!evt.getValueIsAdjusting()) {
        // Obtiene la descripción seleccionada
        String descripcionSeleccionada = jList1.getSelectedValue();
        
        if (descripcionSeleccionada != null) {
            // Busca el método de pago por su descripción
            MetodoDePagoDao dao = new MetodoDePagoDao();
            MetodoDePagoModel metodo = dao.obtenerPorDescripcion(descripcionSeleccionada);
            
            if (metodo != null) {
                // Muestra el ID y la descripción en los campos
                jTextFieldId.setText(String.valueOf(metodo.getId()));
                jTextFieldServicio.setText(metodo.getDescripcion());
            }
        }
    }
    }//GEN-LAST:event_jList1ValueChanged

    private void roundedGreenButtomGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundedGreenButtomGuardarActionPerformed
        String descripcion = jTextFieldServicio.getText().trim();
    String idText = jTextFieldId.getText().trim();
    
    controller.MetodoDePagoController controller = new controller.MetodoDePagoController();
    
    // Si hay un ID, es una actualización
    if (!idText.isEmpty()) {
        int id = Integer.parseInt(idText);
        if (controller.validarDescripcion(descripcion, id)) { // Usa la validación con ID
            boolean actualizado = controller.actualizarMetodo(id, descripcion);
            if (actualizado) {
                javax.swing.JOptionPane.showMessageDialog(this, "Método de pago actualizado correctamente.");
                cargarLista(); // recarga la lista con los métodos actualizados
                // Limpiar campos
                jTextFieldId.setText("");
                jTextFieldServicio.setText("");
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Error al actualizar el método de pago.");
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "La descripción no es válida o ya existe.");
        }
    } else {
        // Si no hay ID, es un nuevo registro
        if (controller.validarDescripcion(descripcion)) {
            boolean guardado = controller.guardarMetodo(descripcion);
            if (guardado) {
                javax.swing.JOptionPane.showMessageDialog(this, "Método de pago guardado correctamente.");
                cargarLista(); // recarga la lista con los métodos actualizados
                jTextFieldServicio.setText(""); // limpia el campo
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar el método de pago.");
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "La descripción no es válida o ya existe.");
        }
    }
    }//GEN-LAST:event_roundedGreenButtomGuardarActionPerformed

    private void roundedGreenButtom2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundedGreenButtom2ActionPerformed
        String idText = jTextFieldId.getText();
    if (idText.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Selecciona un método de pago para eliminar.");
        return;
    }

    int id = Integer.parseInt(idText);
    controller.MetodoDePagoController controller = new controller.MetodoDePagoController();
    boolean eliminado = controller.eliminarMetodo(id);
    
    if (eliminado) {
        javax.swing.JOptionPane.showMessageDialog(this, "Método de pago eliminado.");
        cargarLista();
        // Limpiar campos
        jTextFieldId.setText("");
        jTextFieldServicio.setText("");
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Error al eliminar método de pago.");
    }
    }//GEN-LAST:event_roundedGreenButtom2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelServicio;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldServicio;
    private view.RoundedGreenButtom roundedGreenButtom2;
    private view.RoundedGreenButtom roundedGreenButtomGuardar;
    // End of variables declaration//GEN-END:variables


    private void cargarLista() {
        MetodoDePagoDao dao = new MetodoDePagoDao();
    List<MetodoDePagoModel> metodos = dao.listarMetodos();

    DefaultListModel<String> modeloLista = new DefaultListModel<>();
    for (MetodoDePagoModel metodo : metodos) {
        // Solo añadimos la descripción a la lista
        modeloLista.addElement(metodo.getDescripcion());
    }

    jList1.setModel(modeloLista);
    }
    

    
    

}
